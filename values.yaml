# BD SelfScan Default Configuration Values
# This file contains default configuration values for the BD SelfScan Helm chart

# Global configuration
global:
  namespace: "bd-selfscan-system"

# Chart metadata
nameOverride: ""
fullnameOverride: ""

# RBAC configuration
rbac:
  create: true
  serviceAccount:
    create: true
    name: ""
    annotations: {}

# Black Duck configuration
blackduck:
  tokenSecretName: "blackduck-creds"
  trustCert: true

# On-demand scanning configuration (Phase 1)
onDemand:
  enabled: true

# Automated scanning configuration (Phase 2)
automated:
  enabled: false

# Scan target (for on-demand scanning)
scanTarget: ""

# Application configuration
applications: []

# ConfigMap configuration
configMap:
  applications:
    name: "bd-selfscan-applications"

# Scanner configuration
scanner:
  image: "ubuntu:22.04"
  imagePullPolicy: "IfNotPresent"

  # Resource limits and requests
  resources:
    requests:
      memory: "2Gi"
      cpu: "500m"
      ephemeral-storage: "10Gi"
    limits:
      memory: "8Gi"
      cpu: "4"
      ephemeral-storage: "50Gi"

  # Job configuration
  job:
    backoffLimit: 2
    activeDeadlineSeconds: 3600
    ttlSecondsAfterFinished: 86400  # 24 hours
    parallelism: 1
    completions: 1
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

  # Container security context
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - ALL

  # Node selection
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Docker socket access (if needed)
  dockerSocket:
    enabled: false

# Scanning configuration
scanning:
  projectTier: 3
  policyFailSeverities: "CRITICAL,BLOCKER"
  imageDownloadTimeout: 600
  imageDownloadRetries: 3
  scanTimeout: 1800

# Registry configuration
registry:
  imagePullSecrets: []

# Debug configuration
debug:
  enabled: false
  logLevel: "INFO"
  keepTempFiles: false

# Monitoring configuration (Phase 2)
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    interval: "30s"
    scrapeTimeout: "10s"

# Controller configuration (Phase 2)
controller:
  enabled: false
  image: "python:3.11-slim"
  imagePullPolicy: "IfNotPresent"
  replicas: 1

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080

  metrics:
    enabled: true
    port: 8080
    path: "/metrics"

  health:
    enabled: true
    port: 8081
    path: "/health"

# Scheduled scanning configuration (Phase 2)
scheduled:
  enabled: false
  jobs: []

# Network policy configuration
networkPolicy:
  enabled: false
  ingress: []
  egress: []